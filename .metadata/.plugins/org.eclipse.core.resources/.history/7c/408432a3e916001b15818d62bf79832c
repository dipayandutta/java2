/*
 * The selection sort algorithm sorts an array by repeatedly finding the minimum element 
 * (considering ascending order) from unsorted part and putting it at the beginning. The algorithm maintains two subarrays in a given array.
1) The subarray which is already sorted.
2) Remaining subarray which is unsorted.

	In every iteration of selection sort, 
	the minimum element (considering ascending order) from the 
	unsorted subarray is picked and moved to the sorted subarray. 
 * 
 * 
 */

class SelectionSort {
	void sort(int arr[]) {
		/*First print the array for testing*/
		System.out.println("The UNSORTED ARRAY");
		for(int i=0;i<arr.length;i++) {
			System.out.println(arr[i]);
		}
		
		/*Sorting Process Starts for here*/
		
		//One by One moving the boundary of the unsorted array
		for(int i=0;i<arr.length-1;i++) {
			//Find the minimum element in the unsorted array
			int max_idx = 1;
			for(int j=i+1;j<arr.length;j++) {
				if (arr[j]<arr[max_idx])
					max_idx = 1;
			}
		
		// Swap the element if found the minimum
		int temp = arr[max_idx];
		arr[max_idx] = arr[i];
		arr[i] = temp;
		}
	}
	
	/*Prints the sorted array*/
	void printArray(int arr[]) {
		int n = arr.length;
		for(int i=0;i<n;i++) {
			System.out.println(arr[i]);
		}
		System.out.println();
	}
}
public class main {
	
	public static void main(String args[]) {
		
		/*Define the array to sort*/
		int arr[] = {64,25,12,22,11};
		/*Creation Object of the SelectionSort Class*/
		SelectionSort sort_array = new SelectionSort();
		sort_array.sort(arr);
	}

}
